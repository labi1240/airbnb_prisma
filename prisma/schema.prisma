// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @unique

  email        String
  firstName    String
  lastName     String
  profileImage String?
  Home         Home[]
  Favorite     Favorite[]
  Reservation  Reservation[]
}

model Home {
  id String @id @default(uuid())

  title        String?
  description  String?
  guests       String?
  bedrooms     String?
  bathrooms    String?
  country      String?
  photo        String?
  price        Int?
  categoryName String?
  Favorite     Favorite[]
  Reservation  Reservation[]

  addedCategory    Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLoaction    Boolean @default(false)

  createdAT DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Favorite {
  id String @id @default(uuid())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?

  createAt DateTime @default(now())
}

model Reservation {
  id String @id @default(uuid())

  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String?
}
model Property {
  id               String   @id @default(uuid())
  name             String
  status           String
  price            String?
  incentives       String?
  address          String
  developer        String
  buildingType     String
  unitsStories     String?
  bedrooms         String
  sizeSqFt         String
  estimatedCompletion String
  summary          String
  units            Unit[]
  galleryData      GalleryData[]
}

model Unit {
  id                 String    @id @default(uuid())
  propertyId         String
  status             String
  statusName         String
  colType            String
  unitType           String
  unitName           String
  br                 Float
  ba                 Int
  sqft               Int
  lotBalc            String?
  price              Int?
  lastPrice          Int?
  lastPriceWithValue Int?
  unitStyle          String
  url                String
  image              String
  label              String?
  labelColor         String?
  providerPlan       String?
  prelaunch          Boolean   @default(false)
  quickMoveInDate    String?
  isQuickMoveIn      Boolean   @default(false)
  displayPricePerSqFt Boolean  @default(true)
  Property           Property  @relation(fields: [propertyId], references: [id])

  @@index([propertyId])
}

model GalleryData {
  id           String   @id @default(uuid())
  propertyId   String
  objectID     String
  galleryID    String
  images       Json  // Storing images array as JSON
  Property     Property @relation(fields: [propertyId], references: [id])

  @@index([propertyId])
}